// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TareaAPiXD.Data;

#nullable disable

namespace TareaAPiXD.Migrations
{
    [DbContext(typeof(EntrevistaDBcontext))]
    [Migration("20240219204300_EntrevistaMigracion")]
    partial class EntrevistaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TareaAPiXD.Models.DetalleEntrevistador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntrevistadoId")
                        .HasColumnType("int");

                    b.Property<int>("HojadevidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrevistadoId");

                    b.HasIndex("HojadevidaId");

                    b.ToTable("detalleEntrevistadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntrevistadoId = 1,
                            HojadevidaId = 1
                        });
                });

            modelBuilder.Entity("TareaAPiXD.Models.DetalleHojadevida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntrevistadoId")
                        .HasColumnType("int");

                    b.Property<int>("HojadevidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrevistadoId");

                    b.HasIndex("HojadevidaId");

                    b.ToTable("detalleHojadevidas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntrevistadoId = 1,
                            HojadevidaId = 1
                        });
                });

            modelBuilder.Entity("TareaAPiXD.Models.Entrevistado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hojadevida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDelEntrevistador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("entrevistados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Area = "desarrollador junior",
                            Hojadevida = "aceptada",
                            NombreDelEntrevistador = "Edwin"
                        });
                });

            modelBuilder.Entity("TareaAPiXD.Models.Entrevistador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("NombreDelEntrevistador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("entrevistadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            NombreDelEntrevistador = "Edwin",
                            edad = 22
                        });
                });

            modelBuilder.Entity("TareaAPiXD.Models.Hojadevida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("hojadevidas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disponible = true,
                            departamento = "Programadores"
                        });
                });

            modelBuilder.Entity("TareaAPiXD.Models.DetalleEntrevistador", b =>
                {
                    b.HasOne("TareaAPiXD.Models.Entrevistado", "Entrevistado")
                        .WithMany()
                        .HasForeignKey("EntrevistadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TareaAPiXD.Models.Hojadevida", "Hojadevida")
                        .WithMany()
                        .HasForeignKey("HojadevidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrevistado");

                    b.Navigation("Hojadevida");
                });

            modelBuilder.Entity("TareaAPiXD.Models.DetalleHojadevida", b =>
                {
                    b.HasOne("TareaAPiXD.Models.Entrevistado", "Entrevistado")
                        .WithMany()
                        .HasForeignKey("EntrevistadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TareaAPiXD.Models.Hojadevida", "Hojadevida")
                        .WithMany()
                        .HasForeignKey("HojadevidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrevistado");

                    b.Navigation("Hojadevida");
                });
#pragma warning restore 612, 618
        }
    }
}
